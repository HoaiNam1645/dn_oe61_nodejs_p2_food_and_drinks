{
  "validation": {
    "error": "Validation error",
    "isString": "{field} must be a string",
    "isEmail": "{field} must be a valid email",
    "isNotEmpty": "{field} should not be empty",
    "minLength": "{field} must be at least {min} characters",
    "maxLength": "{field} must be at most {max} characters",
    "min": "{field} must be at least {min}",
    "isDate": "{field} must be a valid date",
    "phoneInvalidType": "{field} must be a valid phone number",
    "isNumber": "{field} must be a number",
    "isInt": "{field} must be an integer",
    "isDateString": "{field} must be a valid ISO date string",
    "isUrl": "{field} must be a valid URL",
    "arrayNotEmpty": "{field} should not be empty",
    "isEnum": "{field} must be one of {enum}",
    "max": "{field} must be at most {max}"
  },
  "product": {
    "invalidCredentials": "Invalid product information",
    "notFound": "Product not found",
    "quantityNotEnough": "Product quantity is not enough",
    "someProductNotExist": "Some products do not exist. ProductIds: [{missingIds}]",
    "action": {
      "create": {
        "success": "New product successfully created",
        "failed": "Create failed"
      },
      "update": {
        "success": "Product successfully update",
        "failed": "Update failed"
      },
      "delete": {
        "success": "Product successfully delete",
        "failed": "Delete failed"
      },
      "getById": {
        "success": "Product retrieved successfully",
        "failed": "Failed to retrieve product"
      },
      "getAll": {
        "success": "Product list retrieved successfully",
        "failed": "Failed to retrieve product list"
      },
      "createProductCategory": {
        "success": "Product category relationship created successfully",
        "failed": "Failed to create product category relationship"
      },
      "updateProductCategory": {
        "success": "Product category relationship updated successfully",
        "failed": "Failed to update product category relationship"
      },
      "deleteProductCategory": {
        "success": "Product category relationship deleted successfully",
        "failed": "Failed to delete product category relationship"
      },
      "createProductImages": {
        "success": "Product images created successfully",
        "failed": "Failed to create product images"
      },
      "deleteProductImages": {
        "success": "Product images deleted successfully",
        "failed": "Failed to delete product images"
      },
      "listProductsForUser": {
        "success": "Product list retrieved successfully",
        "failed": "Failed to retrieve product list"
      },
      "shareProduct": {
        "success": "Share product successfully"
      },
      "createReview": {
        "success": "Review created successfully",
        "failed": "Failed to create review"
      },
      "getProductReviews": {
        "success": "Product reviews retrieved successfully",
        "failed": "Failed to retrieve product reviews"
      },
      "deleteReview": {
        "success": "Review deleted successfully",
        "failed": "Failed to delete review"
      }
    },
    "error": {
      "productExists": "Product already exists",
      "filesExists": "Files not received yet",
      "failed": "Create failed",
      "productNotFound": "Product does not exist yet",
      "skuIdExists": "SkuId already exists",
      "productInOrder": "Product already exists in order"
    },
    "productCategory": {
      "error": {
        "productExists": "Product already exists",
        "failed": "Create failed",
        "productNotFound": "Product does not exist yet",
        "filesExists": "Files not received yet",
        "skuIdExists": "SkuId already exists",
        "productInOrder": "Product already exists in order",
        "relationshipExists": "Product category relationship already exists",
        "relationshipNotFound": "Product category relationship not found",
        "categoryNotFound": "Category not found",
        "invalidCategoryData": "Invalid product category data"
      }
    },
    "productImages": {
      "error": {
        "maxImagesExceeded": "Products are allowed up to 10 photos maximum",
        "productImagesNotFound": "Product images not found",
        "productNotFound": "Product not found"
      }
    }
  },
  "cart": {
    "notFound": "Cart not found",
    "action": {
      "addProductCart": {
        "success": "Add product items to cart successfully",
        "failed": "Failed to add product items to cart"
      },
      "deleteProductCart": {
        "success": "Delete product items cart successfully",
        "failed": "Failed to delete product items cart"
      }
    }
  },
  "userproduct": {
    "action": {
      "listProductsForUser": {
        "success": "Product list retrieved successfully",
        "failed": "Failed to retrieve product list"
      },
      "getProductDetailForUser": {
        "success": "Product detail retrieved successfully",
        "failed": "Failed to retrieve product detail"
      },
      "shareProduct": {
        "success": "Share product successfully",
        "failed": "Failed to share product"
      }
    },
    "error": {
      "productExists": "Product already exists",
      "filesExists": "Files not received yet",
      "failed": "Create failed",
      "productNotFound": "Product does not exist yet",
      "skuIdExists": "SkuId already exists",
      "productInOrder": "Product already exists in order"
    }
  },
  "userprofile": {
    "action": {
      "getUserProfile": {
        "success": "User profile retrieved successfully",
        "failed": "Failed to retrieve user profile"
      },
      "updateUserProfile": {
        "success": "User profile updated successfully",
        "failed": "Failed to update user profile"
      },
      "updatePassword": {
        "success": "Password updated successfully",
        "failed": "Failed to update password"
      }
    }
  },
  "order": {
    "notFound": "Order not found",
    "notification": {
      "chatwork": {
        "header": "[info][title]{title}[/title]",
        "body": "Order ID: {orderId}\nUser: {userName}\nPayment Method: {paymentMethod}\nTotal price: {total}",
        "footer": "Payment Status: {paymentStatus}\nCreated at: {createdAt}\n[View Order]({orderLink})[/info]"
      },
      "email": {
        "subject": "New order created - ID: {orderId}",
        "intro": "Hello Admin [{adminName}], a new order has been created:",
        "labels": {
          "orderId": "Order ID",
          "user": "User",
          "paymentMethod": "Payment Method",
          "totalPrice": "Total Price",
          "paymentStatus": "Payment Status",
          "createdAt": "Created At",
          "viewOrder": "View Order"
          }
    }
  },
  "orderPendingPayment":"Order pending payment",
    "action":{
      "createOrder":{
        "success":"Create order successfully",
        "failed":"Failed to create order"
      },
      "rejectOrder":{
        "success":"Reject order successfully",
        "failed":"Failed to reject order"
      },
      "confirmOrder":{
        "success":"Confirm order successfully",
        "failed":"Failed to confirm order"
      }
    }
  },
  "payment": {
    "action": {
      "retryPayment": {
        "success": "Retry create payment info successfully",
        "failed": "Failed to retry create payment info"
      }
    }
  },
  "auth": {
    "invalidCredentials": "Invalid credentials",
    "inactiveAccount": "Account is inactive",
    "action": {
      "login": {
        "success": "Login successfully"
      },
      "facebook": {
        "success": "Redirect to login facebook successfully"
      },
      "facebookCallback": {
        "success": "Login successfully"
      },
      "twitter": {
        "invalidConfig": "Invalid configuration",
        "error": "Error when authenticating user"
      },
      "google": {
        "invalidConfig": "Invalid configuration",
        "error": "Error when authenticating user"
      },
      "registerUser": {
        "success": "Register successfully"
      },
      "logout": {
        "error": "Missing cookie configuration",
        "success": "Logout successfully"
      },
      "signToken": {
        "error": "Error when creating token",
        "success": "Create token successfully"
      },
      "signJwtTokenUserCreate": {
        "error": "Error when creating token",
        "success": "Create token successfully"
      }
    }
  },
  "guard": {
    "token_missing": "Token missing",
    "invalid_or_expired_token": "Invalid or expired token",
    "forbidden": "Forbidden",
    "unauthorized": "Unauthorized",
    "action": {
      "login": {
        "success": "Login successfully"
      },
      "facebookCallback": {
        "success": "Login successfully"
      }
    }
  },
  "user": {
    "notFound": "User not found",
    "phoneNumberExist": "Phone number already exists",
    "emailExist": "Email already exists",
    "someUserNotExist": "Some users do not exist. UserIds: [{missingIds}]"
  },
  "adminuser": {
    "action": {
      "create": {
        "success": "Create user successfully",
        "error": "Failed to create user. Please try again"
      },
      "updateRoles": {
        "success": "Update roles successfully",
        "failed": "Failed to update roles. Please try again"
      },
      "updateStatuses": {
        "success": "Update statuses successfully",
        "failed": "Failed to update statuses. Please try again",
        "unchanged": "No user statuses were changed"
      },
      "delete": {
        "success": "Delete user successfully",
        "failed": "Failed to delete user. Please try again",
        "unChanged": "No user was deleted"
      }
    }
  },
  "date": {
    "expiredTime": "Expired time",
    "remainingPayment": "{hours} hours {minutes} minutes left",
    "remainingMinutesPayment": "{minutes} minutes left"
  },
  "file": {
    "validation": {
      "unsupportedType": "File type not supported. Only JPG, JPEG, PNG, WEBP are allowed. Received: {fileType}",
      "sizeExceeded": "File size too large. Maximum allowed: 300MB. Received: {fileSize}MB"
    },
    "error": {
      "invalidUrl": "URL is invalid"
    }
  },
  "errors": {
    "internalServerError": "Internal server error",
    "serviceUnavailable": "Service unavailable",
    "uniqueConstraint": "Unique constraint violation",
    "foreignKeyConstraint": "Foreign key constraint violation",
    "recordNotFound": "Record not found",
    "invalidInput": "Invalid input",
    "dbSchema": "Database schema error",
    "unexpectedDbError": "Unexpected database error",
    "unauthorized": "Unauthorized",
    "validationError": "Validation error",
    "createUser": {
      "error": "Create user failed",
      "roleNotFound": "Role not found",
      "exists": "User already exists",
      "missingFields": "Missing user information"
    },
    "signToken": {
      "error": "Error when creating token"
    },
    "checkUserExists": {
      "error": "Error when checking user"
    },
    "twitter": {
      "invalidConfig": "Invalid configuration",
      "error": "Error when authenticating user"
    },
    "login": {
      "success": "Login successfully"
    },
    "registerUser": {
      "userExists": "User already exists",
      "error": "User registration failed",
      "notToken": "Token not found",
      "userNotFound": "Please enter information"
    },
    "changeIsActive": {
      "invalidPayload": "Invalid data",
      "alreadyActive": "Account is already activated"
    },
    "sendEmailComplete": {
      "dataNotFound": "Invalid data"
    },
    "invalidTypeImage": "Only accept image formats: |jpg|jpeg|png|gif|",
    "invalidSizeImage": "Image size must be smaller than {maxImageSizeMB} MB",
    "cloudinary": {
      "fileExists": "File with name '{fileName}' already exists."
    }
  },
  "review": {
    "success": {
      "created": "Review created successfully",
      "deleted": "Review deleted successfully"
    },
    "errors": {
      "createFailed": "Failed to create review",
      "fetchFailed": "Failed to fetch reviews",
      "deleteFailed": "Failed to delete review",
      "alreadyReviewed": "You have already reviewed this product",
      "productNotFound": "Product not found",
      "reviewNotFound": "Review not found or you don't have permission to delete it"
    }
  }
}
